#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –æ—Ä–¥–µ—Ä–æ–≤
"""

import requests
import json
from datetime import datetime

def test_orders_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –æ—Ä–¥–µ—Ä–æ–≤"""
    
    base_url = "http://localhost:5000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ—Ä–¥–µ—Ä–æ–≤...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ä–¥–µ—Ä–æ–≤
    print("\n1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ä–¥–µ—Ä–æ–≤:")
    try:
        response = requests.get(f"{base_url}/api/orders")
        if response.status_code == 200:
            orders = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ –æ—Ä–¥–µ—Ä–æ–≤: {len(orders)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
    try:
        response = requests.get(f"{base_url}/api/orders/statistics")
        if response.status_code == 200:
            stats = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   - –í—Å–µ–≥–æ –æ—Ä–¥–µ—Ä–æ–≤: {stats.get('total_orders', 0)}")
            print(f"   - –û–±—â–∏–π –æ–±—ä–µ–º: {stats.get('total_volume', 0):.2f} USDT")
            print(f"   - –ö–æ–º–∏—Å—Å–∏–∏: {stats.get('total_fees', 0):.2f} USDT")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    print("\n3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
    try:
        response = requests.get(f"{base_url}/api/employees")
        if response.status_code == 200:
            employees = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(employees)}")
            if employees:
                print("   –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:")
                for emp in employees[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 3
                    print(f"   - {emp.get('name', 'N/A')} (ID: {emp.get('id', 'N/A')})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ä–¥–µ—Ä–∞
    print("\n4. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ä–¥–µ—Ä–∞:")
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        response = requests.get(f"{base_url}/api/employees")
        if response.status_code == 200:
            employees = response.json()
            if employees:
                employee_id = employees[0]['id']
                
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ä–¥–µ—Ä
                test_order = {
                    "order_id": f"TEST_{datetime.now().strftime('%Y%m%d_%H%M%S')}",
                    "employee_id": employee_id,
                    "platform": "bybit",
                    "accountName": "Test Account",
                    "symbol": "BTC/USDT",
                    "side": "buy",
                    "quantity": 0.001,
                    "price": 50000.0,
                    "status": "filled",
                    "executed_at": datetime.now().isoformat()
                }
                
                response = requests.post(
                    f"{base_url}/api/orders",
                    headers={'Content-Type': 'application/json'},
                    json=test_order
                )
                
                if response.status_code == 201:
                    result = response.json()
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –°–æ–∑–¥–∞–Ω –æ—Ä–¥–µ—Ä ID: {result.get('id', 'N/A')}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: HTTP {response.status_code}")
                    print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            else:
                print("‚ùå –ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: HTTP {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–¥–µ—Ä–∞: {e}")
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_orders_api() 