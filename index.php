<?php
// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
require_once 'config.php';

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
$pdo = getDbConnection();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
$isAuthorized = isAuthorized();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if (isset($_POST['action']) && $_POST['action'] === 'login') {
    if (login($_POST['password'])) {
        $isAuthorized = true;
    }
}

if (isset($_POST['action']) && $_POST['action'] === 'logout') {
    logout();
    $isAuthorized = false;
}
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–∞–±–ª–∏—Ü–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .login-form {
            padding: 50px;
            text-align: center;
        }

        .login-form input {
            padding: 15px;
            font-size: 18px;
            border: 2px solid #ddd;
            border-radius: 10px;
            margin: 10px;
            width: 300px;
        }

        .login-form button {
            padding: 15px 30px;
            font-size: 18px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            margin: 10px;
        }

        .login-form button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .nav-tabs {
            display: flex;
            background: #f8f9fa;
            border-bottom: 1px solid #ddd;
        }

        .nav-tab {
            padding: 20px 30px;
            cursor: pointer;
            border: none;
            background: none;
            font-size: 16px;
            font-weight: 500;
            color: #666;
            border-bottom: 3px solid transparent;
            transition: all 0.3s ease;
        }

        .nav-tab:hover {
            background: #e9ecef;
            color: #333;
        }

        .nav-tab.active {
            color: #667eea;
            border-bottom-color: #667eea;
            background: white;
        }

        .tab-content {
            display: none;
            padding: 30px;
        }

        .tab-content.active {
            display: block;
        }

        .card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            margin: 20px 0;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            border: 1px solid #e9ecef;
        }

        .card h3 {
            color: #333;
            margin-bottom: 20px;
            font-size: 1.5em;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #555;
        }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }

        .table th,
        .table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #e9ecef;
        }

        .table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #555;
        }

        .table tr:hover {
            background: #f8f9fa;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
        }

        .stat-card h3 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .stat-card p {
            font-size: 1.1em;
            opacity: 0.9;
        }

        .alert {
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .logout-btn {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(255,255,255,0.2);
            color: white;
            border: 1px solid rgba(255,255,255,0.3);
            padding: 10px 20px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 14px;
        }

        .logout-btn:hover {
            background: rgba(255,255,255,0.3);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä –¢–∞–±–ª–∏—Ü–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏</h1>
            <p>–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π</p>
            <?php if ($isAuthorized): ?>
                <form method="POST" style="display: inline;">
                    <input type="hidden" name="action" value="logout">
                    <button type="submit" class="logout-btn">–í—ã–π—Ç–∏</button>
                </form>
            <?php endif; ?>
        </div>

        <?php if (!$isAuthorized): ?>
            <div class="login-form">
                <h2>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
                <form method="POST">
                    <input type="hidden" name="action" value="login">
                    <div>
                        <input type="password" name="password" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" required>
                    </div>
                    <div>
                        <button type="submit">–í–æ–π—Ç–∏</button>
                    </div>
                </form>
            </div>
        <?php else: ?>
            <div class="nav-tabs">
                <button class="nav-tab active" onclick="showTab('dashboard')">üìä –î–∞—à–±–æ—Ä–¥</button>
                <button class="nav-tab" onclick="showTab('reports')">üìã –û—Ç—á–µ—Ç—ã</button>
                <button class="nav-tab" onclick="showTab('employees')">üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</button>
                <button class="nav-tab" onclick="showTab('accounts')">üí≥ –ê–∫–∫–∞—É–Ω—Ç—ã</button>
                <button class="nav-tab" onclick="showTab('settings')">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
            </div>

            <div id="dashboard" class="tab-content active">
                <h2>üìä –î–∞—à–±–æ—Ä–¥</h2>
                <div class="stats-grid">
                    <div class="stat-card">
                        <h3 id="total-profit">0</h3>
                        <p>–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å (USDT)</p>
                    </div>
                    <div class="stat-card">
                        <h3 id="total-reports">0</h3>
                        <p>–í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤</p>
                    </div>
                    <div class="stat-card">
                        <h3 id="active-employees">0</h3>
                        <p>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
                    </div>
                    <div class="stat-card">
                        <h3 id="total-accounts">0</h3>
                        <p>–í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤</p>
                    </div>
                </div>
            </div>

            <div id="reports" class="tab-content">
                <h2>üìã –û—Ç—á–µ—Ç—ã</h2>
                <div class="card">
                    <h3>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç</h3>
                    <form id="report-form">
                        <div class="form-group">
                            <label>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</label>
                            <select class="form-control" name="employee_id" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>–î–∞—Ç–∞ —Å–º–µ–Ω—ã</label>
                            <input type="date" class="form-control" name="shift_date" required>
                        </div>
                        <div class="form-group">
                            <label>–¢–∏–ø —Å–º–µ–Ω—ã</label>
                            <select class="form-control" name="shift_type" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                                <option value="morning">–£—Ç—Ä–µ–Ω–Ω—è—è</option>
                                <option value="evening">–í–µ—á–µ—Ä–Ω—è—è</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>–°—É–º–º–∞ –¥–æ–∫–∏–¥–∫–∏ (USDT)</label>
                            <input type="number" step="0.01" class="form-control" name="dokidka_amount" value="0">
                        </div>
                        <div class="form-group">
                            <label>–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–µ—Ä–µ–≤–æ–¥ (USDT)</label>
                            <input type="number" step="0.01" class="form-control" name="internal_transfer" value="0">
                        </div>
                        <button type="submit" class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç</button>
                    </form>
                </div>

                <div class="card">
                    <h3>–°–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤</h3>
                    <table class="table" id="reports-table">
                        <thead>
                            <tr>
                                <th>–î–∞—Ç–∞</th>
                                <th>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</th>
                                <th>–°–º–µ–Ω–∞</th>
                                <th>–ü—Ä–∏–±—ã–ª—å</th>
                                <th>–î–æ–∫–∏–¥–∫–∞</th>
                                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div id="employees" class="tab-content">
                <h2>üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</h2>
                <div class="card">
                    <h3>–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</h3>
                    <form id="employee-form">
                        <div class="form-group">
                            <label>–ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</label>
                            <input type="text" class="form-control" name="name" required>
                        </div>
                        <div class="form-group">
                            <label>Telegram</label>
                            <input type="text" class="form-control" name="telegram">
                        </div>
                        <div class="form-group">
                            <label>–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã (%)</label>
                            <input type="number" step="0.1" class="form-control" name="salary_percent" value="10">
                        </div>
                        <button type="submit" class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</button>
                    </form>
                </div>

                <div class="card">
                    <h3>–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</h3>
                    <table class="table" id="employees-table">
                        <thead>
                            <tr>
                                <th>–ò–º—è</th>
                                <th>Telegram</th>
                                <th>–ü—Ä–æ—Ü–µ–Ω—Ç</th>
                                <th>–°—Ç–∞—Ç—É—Å</th>
                                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div id="accounts" class="tab-content">
                <h2>üí≥ –ê–∫–∫–∞—É–Ω—Ç—ã</h2>
                <div class="card">
                    <h3>–î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</h3>
                    <form id="account-form">
                        <div class="form-group">
                            <label>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</label>
                            <select class="form-control" name="platform" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É</option>
                                <option value="bybit">Bybit</option>
                                <option value="htx">HTX</option>
                                <option value="bliss">Bliss</option>
                                <option value="gate">Gate</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞</label>
                            <input type="text" class="form-control" name="account_name" required>
                        </div>
                        <div class="form-group">
                            <label>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</label>
                            <select class="form-control" name="employee_id">
                                <option value="">–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</button>
                    </form>
                </div>

                <div class="card">
                    <h3>–°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤</h3>
                    <table class="table" id="accounts-table">
                        <thead>
                            <tr>
                                <th>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</th>
                                <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                                <th>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</th>
                                <th>–°—Ç–∞—Ç—É—Å</th>
                                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div id="settings" class="tab-content">
                <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                <div class="card">
                    <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h3>
                    <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</p>
                </div>
            </div>
        <?php endif; ?>
    </div>

    <script>
        function showTab(tabName) {
            // –°–∫—Ä—ã—Ç—å –≤—Å–µ —Ç–∞–±—ã
            const tabs = document.querySelectorAll('.tab-content');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            // –£–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å –∫–Ω–æ–ø–æ–∫
            const buttons = document.querySelectorAll('.nav-tab');
            buttons.forEach(btn => btn.classList.remove('active'));
            
            // –ü–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—ã–π —Ç–∞–±
            document.getElementById(tabName).classList.add('active');
            
            // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É
            event.target.classList.add('active');
        }

        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', function() {
            if (document.querySelector('.nav-tabs')) {
                loadDashboardData();
                loadEmployees();
                loadAccounts();
                loadReports();
            }
        });

        async function apiRequest(action, method = 'GET', data = null) {
            const options = {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                }
            };
            
            if (data) {
                options.body = JSON.stringify(data);
            }
            
            try {
                const response = await fetch(`api.php?action=${action}`, options);
                return await response.json();
            } catch (error) {
                console.error('API Error:', error);
                return { error: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏' };
            }
        }

        async function loadDashboardData() {
            const data = await apiRequest('dashboard');
            if (!data.error) {
                document.getElementById('total-profit').textContent = data.total_profit;
                document.getElementById('total-reports').textContent = data.total_reports;
                document.getElementById('active-employees').textContent = data.active_employees;
                document.getElementById('total-accounts').textContent = data.total_accounts;
            }
        }

        async function loadEmployees() {
            const employees = await apiRequest('employees');
            if (!employees.error) {
                updateEmployeesTable(employees);
                updateEmployeeSelects(employees);
            }
        }

        function updateEmployeesTable(employees) {
            const tbody = document.querySelector('#employees-table tbody');
            tbody.innerHTML = '';
            
            employees.forEach(employee => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${employee.name}</td>
                    <td>${employee.telegram || '-'}</td>
                    <td>${employee.salary_percent}%</td>
                    <td><span class="badge badge-success">–ê–∫—Ç–∏–≤–µ–Ω</span></td>
                    <td>
                        <button class="btn btn-sm btn-secondary" onclick="editEmployee(${employee.id})">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteEmployee(${employee.id})">–£–¥–∞–ª–∏—Ç—å</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function updateEmployeeSelects(employees) {
            const selects = document.querySelectorAll('select[name="employee_id"]');
            selects.forEach(select => {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                const currentValue = select.value;
                
                // –û—á–∏—â–∞–µ–º –æ–ø—Ü–∏–∏, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π
                while (select.children.length > 1) {
                    select.removeChild(select.lastChild);
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                employees.forEach(employee => {
                    const option = document.createElement('option');
                    option.value = employee.id;
                    option.textContent = employee.name;
                    select.appendChild(option);
                });
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                select.value = currentValue;
            });
        }

        async function loadAccounts() {
            const accounts = await apiRequest('accounts');
            if (!accounts.error) {
                updateAccountsTable(accounts);
            }
        }

        function updateAccountsTable(accounts) {
            const tbody = document.querySelector('#accounts-table tbody');
            tbody.innerHTML = '';
            
            accounts.forEach(account => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td><span class="badge badge-${getPlatformColor(account.platform)}">${account.platform.toUpperCase()}</span></td>
                    <td>${account.account_name}</td>
                    <td>${account.employee_name || '–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}</td>
                    <td><span class="badge badge-success">–ê–∫—Ç–∏–≤–µ–Ω</span></td>
                    <td>
                        <button class="btn btn-sm btn-secondary" onclick="editAccount(${account.id})">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteAccount(${account.id})">–£–¥–∞–ª–∏—Ç—å</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function getPlatformColor(platform) {
            const colors = {
                'bybit': 'primary',
                'htx': 'success',
                'bliss': 'warning',
                'gate': 'info'
            };
            return colors[platform] || 'secondary';
        }

        async function loadReports() {
            const reports = await apiRequest('reports');
            if (!reports.error) {
                updateReportsTable(reports);
            }
        }

        function updateReportsTable(reports) {
            const tbody = document.querySelector('#reports-table tbody');
            tbody.innerHTML = '';
            
            reports.forEach(report => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${formatDate(report.shift_date)}</td>
                    <td>${report.employee_name}</td>
                    <td><span class="badge badge-${report.shift_type === 'morning' ? 'warning' : 'info'}">${report.shift_type === 'morning' ? '–£—Ç—Ä–µ–Ω–Ω—è—è' : '–í–µ—á–µ—Ä–Ω—è—è'}</span></td>
                    <td class="${report.profit >= 0 ? 'text-success' : 'text-danger'}">${report.profit ? report.profit.toFixed(2) : '0.00'} USDT</td>
                    <td>${report.dokidka_amount ? report.dokidka_amount.toFixed(2) : '0.00'} USDT</td>
                    <td>
                        <button class="btn btn-sm btn-secondary" onclick="viewReport(${report.id})">–ü—Ä–æ—Å–º–æ—Ç—Ä</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteReport(${report.id})">–£–¥–∞–ª–∏—Ç—å</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('ru-RU');
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º
        document.getElementById('employee-form')?.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            
            const result = await apiRequest('employees', 'POST', data);
            
            if (result.success) {
                showAlert('–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success');
                this.reset();
                loadEmployees();
                loadDashboardData();
            } else {
                showAlert(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', 'error');
            }
        });

        document.getElementById('account-form')?.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            
            const result = await apiRequest('accounts', 'POST', data);
            
            if (result.success) {
                showAlert('–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success');
                this.reset();
                loadAccounts();
                loadDashboardData();
            } else {
                showAlert(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞', 'error');
            }
        });

        document.getElementById('report-form')?.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            
            const result = await apiRequest('reports', 'POST', data);
            
            if (result.success) {
                showAlert('–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success');
                this.reset();
                loadReports();
                loadDashboardData();
            } else {
                showAlert(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞', 'error');
            }
        });

        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type === 'success' ? 'success' : 'error'}`;
            alertDiv.textContent = message;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            const container = document.querySelector('.container');
            container.insertBefore(alertDiv, container.firstChild);
            
            // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }

        // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è
        function editEmployee(id) {
            showAlert('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
        }

        function deleteEmployee(id) {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞?')) {
                showAlert('–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
            }
        }

        function editAccount(id) {
            showAlert('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
        }

        function deleteAccount(id) {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç?')) {
                showAlert('–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
            }
        }

        function viewReport(id) {
            showAlert('–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
        }

        function deleteReport(id) {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ—Ç—á–µ—Ç?')) {
                showAlert('–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
            }
        }
    </script>
</body>
</html> 