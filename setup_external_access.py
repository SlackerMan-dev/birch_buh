#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
–†–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
"""

import subprocess
import sys
import os
import socket
import requests
import json
from pathlib import Path

def get_local_ip():
    """–ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–æ–∫–µ—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è IP
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        local_ip = s.getsockname()[0]
        s.close()
        return local_ip
    except:
        return "127.0.0.1"

def get_external_ip():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤–Ω–µ—à–Ω–∏–π IP –∞–¥—Ä–µ—Å"""
    try:
        response = requests.get('https://api.ipify.org?format=json', timeout=5)
        return response.json()['ip']
    except:
        return "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"

def setup_flask_for_external():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Flask –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Flask –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ app.py
    if not os.path.exists('app.py'):
        print("‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ app.py
    with open('app.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ —É–∂–µ –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø
    if "host='0.0.0.0'" in content:
        print("‚úÖ Flask —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
        return True
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = 'app.py.backup'
    with open(backup_path, 'w', encoding='utf-8') as f:
        f.write(content)
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    
    # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö–æ—Å—Ç–∞
    if "app.run(debug=" in content:
        content = content.replace(
            "app.run(debug=debug_mode, host=host, port=port)",
            "app.run(debug=debug_mode, host='0.0.0.0', port=port)"
        )
    elif "app.run(" in content:
        content = content.replace(
            "app.run(",
            "app.run(host='0.0.0.0', "
        )
    else:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –∑–∞–ø—É—Å–∫–∞ Flask")
        return False
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    with open('app.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ Flask –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
    return True

def create_env_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    env_path = Path('.env')
    
    if env_path.exists():
        print("‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return
    
    env_content = """# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
FLASK_HOST=0.0.0.0
FLASK_PORT=5000
FLASK_ENV=production

# –ü–∞—Ä–æ–ª–∏ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–ó–ú–ï–ù–ò–¢–ï!)
APP_PASSWORD=your_secure_password_here
ADMIN_PASSWORD=your_admin_password_here

# –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–ó–ú–ï–ù–ò–¢–ï!)
SECRET_KEY=your_super_secret_key_here

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=sqlite:///arbitrage_reports.db
"""
    
    with open(env_path, 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ —Ñ–∞–π–ª–µ .env!")

def create_start_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞"""
    script_content = """@echo off
echo üöÄ –ó–∞–ø—É—Å–∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
echo ================================================

echo üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...
if not exist app.py (
    echo ‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω!
    pause
    exit /b 1
)

echo üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...
set FLASK_HOST=0.0.0.0
set FLASK_PORT=5000
set FLASK_ENV=production

echo üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
python app.py

pause
"""
    
    with open('start_external.bat', 'w', encoding='utf-8') as f:
        f.write(script_content)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–∫–∂–µ Linux –≤–µ—Ä—Å–∏—é
    linux_script = """#!/bin/bash
echo "üöÄ –ó–∞–ø—É—Å–∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞"
echo "================================================"

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
if [ ! -f app.py ]; then
    echo "‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
export FLASK_HOST=0.0.0.0
export FLASK_PORT=5000
export FLASK_ENV=production

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
python3 app.py
"""
    
    with open('start_external.sh', 'w', encoding='utf-8') as f:
        f.write(linux_script)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º –Ω–∞ Linux
    try:
        os.chmod('start_external.sh', 0o755)
    except:
        pass
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞:")
    print("   - start_external.bat (Windows)")
    print("   - start_external.sh (Linux/Mac)")

def create_instructions():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    local_ip = get_local_ip()
    external_ip = get_external_ip()
    
    instructions = f"""# üåê –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞

## üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏

- **–õ–æ–∫–∞–ª—å–Ω—ã–π IP:** {local_ip}
- **–í–Ω–µ—à–Ω–∏–π IP:** {external_ip}
- **–ü–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:** 5000

## üöÄ –°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç—É–ø–∞

### 1. –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å (LAN)
–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º –≤ –≤–∞—à–µ–π —Å–µ—Ç–∏:
- **URL:** http://{local_ip}:5000
- **–ö–æ–º—É –¥–æ—Å—Ç—É–ø–Ω–æ:** –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ç–æ–π –∂–µ —Å–µ—Ç–∏ (Wi-Fi, Ethernet)

### 2. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä (Port Forwarding)
–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤:

#### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞:
1. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ä–æ—É—Ç–µ—Ä–∞ (–æ–±—ã—á–Ω–æ 192.168.1.1 –∏–ª–∏ 192.168.0.1)
2. –ù–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª "Port Forwarding" –∏–ª–∏ "–ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤"
3. –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª–æ:
   - **–í–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç:** 5000
   - **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP:** {local_ip}
   - **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Ä—Ç:** 5000
   - **–ü—Ä–æ—Ç–æ–∫–æ–ª:** TCP

#### –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
- **URL:** http://{external_ip}:5000
- **–ö–æ–º—É –¥–æ—Å—Ç—É–ø–Ω–æ:** –í—Å–µ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ

### 3. –¢—É–Ω–Ω–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ngrok –∏–ª–∏ Cloudflare Tunnel –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:

#### ngrok:
```bash
python setup_ngrok.py
```

#### Cloudflare Tunnel:
```bash
python setup_cloudflare.py
```

## üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

### ‚ö†Ô∏è –í–ê–ñ–ù–û:
1. **–ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏** –≤ —Ñ–∞–π–ª–µ .env
2. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS** –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
3. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
4. **–†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ** –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
- –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏: –±–µ–∑–æ–ø–∞—Å–Ω–æ
- –î–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—É–Ω–Ω–µ–ª–∏
- –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPS/–æ–±–ª–∞–∫–æ

## üõ†Ô∏è –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

### –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª Windows/Linux
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç 5000 –æ—Ç–∫—Ä—ã—Ç
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å

### –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ä—Ç
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–Ω–µ—à–Ω–∏–π IP (–º–æ–∂–µ—Ç –±—ã—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º)

### –û–±—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:
- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Flask
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏
"""
    
    with open('EXTERNAL_ACCESS_GUIDE.md', 'w', encoding='utf-8') as f:
        f.write(instructions)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª EXTERNAL_ACCESS_GUIDE.md —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏")

def main():
    print("üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
    print("=" * 60)
    
    local_ip = get_local_ip()
    external_ip = get_external_ip()
    
    print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏:")
    print(f"   –õ–æ–∫–∞–ª—å–Ω—ã–π IP: {local_ip}")
    print(f"   –í–Ω–µ—à–Ω–∏–π IP: {external_ip}")
    
    print("\nüîß –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("1. –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å (LAN) - –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –≤ –≤–∞—à–µ–π —Å–µ—Ç–∏")
    print("2. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä - —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞")
    print("3. –¢—É–Ω–Ω–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (ngrok) - –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±")
    print("4. –¢—É–Ω–Ω–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (Cloudflare) - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±")
    print("5. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã")
    
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
    
    if choice == '1':
        print("\nüè† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏...")
        if setup_flask_for_external():
            print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:")
            print(f"üåê http://{local_ip}:5000")
            print("\nüì± –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –≤ –≤–∞—à–µ–π —Å–µ—Ç–∏")
    
    elif choice == '2':
        print("\nüåç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞...")
        if setup_flask_for_external():
            create_instructions()
            print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:")
            print(f"üåê http://{external_ip}:5000")
            print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–æ—É—Ç–µ—Ä–∞ –≤ —Ñ–∞–π–ª–µ EXTERNAL_ACCESS_GUIDE.md")
    
    elif choice == '3':
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ngrok...")
        os.system('python setup_ngrok.py')
        return
    
    elif choice == '4':
        print("\n‚òÅÔ∏è –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Cloudflare...")
        os.system('python setup_cloudflare.py')
        return
    
    elif choice == '5':
        print("\nüîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤...")
        setup_flask_for_external()
        create_env_file()
        create_start_script()
        create_instructions()
        print("\n‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ!")
        print("üìÅ –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã:")
        print("   - .env (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏)")
        print("   - start_external.bat/sh (—Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞)")
        print("   - EXTERNAL_ACCESS_GUIDE.md (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏)")
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        return
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python app.py")

if __name__ == "__main__":
    main() 