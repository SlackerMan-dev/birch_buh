#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞ (–Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
"""

from app import app, db, Employee, Account, ShiftReport
from datetime import datetime, timedelta
import random
import json

def generate_test_data():
    with app.app_context():
        db.session.query(ShiftReport).delete()
        db.session.query(Account).delete()
        db.session.query(Employee).delete()
        db.session.commit()
        
        # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
        employees = [
            Employee(name="–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤", shift="morning"),
            Employee(name="–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", shift="morning"),
            Employee(name="–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤", shift="evening"),
            Employee(name="–ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞", shift="evening"),
            Employee(name="–°–µ—Ä–≥–µ–π –ú–æ—Ä–æ–∑–æ–≤", shift="morning"),
        ]
        for emp in employees:
            db.session.add(emp)
        db.session.commit()
        
        # –ê–∫–∫–∞—É–Ω—Ç—ã (–ø–æ 2 –Ω–∞ –∫–∞–∂–¥—É—é –ø–ª–æ—â–∞–¥–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞)
        platforms = ["bybit", "htx", "bliss", "gate"]
        accounts = []
        for emp in employees:
            for platform in platforms:
                for i in range(1, 3):
                    acc = Account(employee_id=emp.id, platform=platform, account_name=f"{platform}_acc_{i}_{emp.id}")
                    db.session.add(acc)
                    accounts.append(acc)
        db.session.commit()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç—ã –∑–∞ 10 –¥–Ω–µ–π
        end_date = datetime.now().date()
        start_date = end_date - timedelta(days=10)
        for i in range(10):
            current_date = start_date + timedelta(days=i)
            for emp in employees:
                # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π –ø–ª–æ—â–∞–¥–∫–∏
                balances = {}
                for platform in platforms:
                    accs = [a for a in accounts if a.employee_id == emp.id and a.platform == platform]
                    balances[platform] = [
                        {"account_id": a.id, "account_name": a.account_name, "balance": round(random.uniform(100, 1000), 2)}
                        for a in random.sample(accs, k=random.randint(1, 2))
                    ]
                # –°–ö–ê–ú –∏ –ü–ï–†–ï–í–û–î–´
                scam_amount = round(random.uniform(0, 200), 2) if random.random() < 0.2 else 0
                scam_comment = "–°–ª—É—á–∞–π —Å–∫–∞–º" if scam_amount else ""
                transfer_amount = round(random.uniform(0, 500), 2) if random.random() < 0.3 else 0
                transfer_comment = "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç—ã" if transfer_amount else ""
                report = ShiftReport(
                    employee_id=emp.id,
                    shift_date=current_date,
                    shift_type=emp.shift,
                    total_requests=random.randint(10, 40),
                    balances_json=json.dumps(balances, ensure_ascii=False),
                    scam_amount=scam_amount,
                    scam_comment=scam_comment,
                    transfer_amount=transfer_amount,
                    transfer_comment=transfer_comment
                )
                db.session.add(report)
        db.session.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        print(f"üìä –°–æ–∑–¥–∞–Ω–æ:")
        print(f"   - {len(employees)} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
        print(f"   - {len(accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        print(f"   - ~{len(employees) * 10} –æ—Ç—á–µ—Ç–æ–≤ –∑–∞ 10 –¥–Ω–µ–π")

if __name__ == "__main__":
    generate_test_data() 