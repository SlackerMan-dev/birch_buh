#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import shutil
import zipfile
from datetime import datetime

def create_deployment_package():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–∫–µ—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Timeweb"""
    
    print("üì¶ –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Timeweb...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    temp_dir = "timeweb_deploy"
    if os.path.exists(temp_dir):
        shutil.rmtree(temp_dir)
    os.makedirs(temp_dir)
    
    # –§–∞–π–ª—ã –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    files_to_copy = [
        'app.py',
        'utils.py',
        'requirements.txt',
        'gunicorn_config.py',
        'wsgi.py',
        'check_db.py',
        'check_orders.py',
        'check_accounts.py',
        'create_test_data.py',
        'test_bliss_upload.py',
        'test_upload.py',
        'test_orders_api.py',
        'test_flask.py',
        'apply_migration.py',
        'fix_links.py',
        'download_cloudflared.py',
        'setup_external_access.py',
        'start_server.py',
        'simple_server.py',
        'config.php',
        'config.yml',
        'alembic.ini',
        'database.sql',
        'test_bliss.csv',
        'arbitrage_reports.db'
    ]
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    dirs_to_copy = [
        'templates',
        'migrations',
        'bybit-extension',
        'reports-frontend',
        'src',
        'certs'
    ]
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    for file in files_to_copy:
        if os.path.exists(file):
            shutil.copy2(file, temp_dir)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: {file}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for dir_name in dirs_to_copy:
        if os.path.exists(dir_name):
            shutil.copytree(dir_name, os.path.join(temp_dir, dir_name))
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_name}")
        else:
            print(f"‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {dir_name}")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs(os.path.join(temp_dir, "uploads"), exist_ok=True)
    os.makedirs(os.path.join(temp_dir, "instance"), exist_ok=True)
    os.makedirs(os.path.join(temp_dir, "static"), exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º .htaccess –¥–ª—è Timeweb
    htaccess_content = """RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ wsgi.py/$1 [QSA,L]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Python
AddHandler wsgi-script .py
Options ExecCGI

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
php_value upload_max_filesize 16M
php_value post_max_size 16M
php_value max_execution_time 300
php_value max_input_time 300
"""
    
    with open(os.path.join(temp_dir, ".htaccess"), "w", encoding="utf-8") as f:
        f.write(htaccess_content)
    
    # –°–æ–∑–¥–∞–µ–º config_timeweb.py
    config_content = """# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Timeweb
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Timeweb
DB_HOST = os.environ.get('DB_HOST', 'localhost')
DB_NAME = os.environ.get('DB_NAME', 'your_database_name')
DB_USER = os.environ.get('DB_USER', 'your_username')
DB_PASS = os.environ.get('DB_PASS', 'your_password')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
SECRET_KEY = os.environ.get('SECRET_KEY', 'your-secret-key-change-in-production')
ADMIN_PASSWORD = os.environ.get('ADMIN_PASSWORD', 'Blalala2')

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
UPLOAD_FOLDER = os.path.join(os.path.dirname(__file__), 'uploads')
INSTANCE_PATH = os.path.join(os.path.dirname(__file__), 'instance')

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
os.makedirs(INSTANCE_PATH, exist_ok=True)
"""
    
    with open(os.path.join(temp_dir, "config_timeweb.py"), "w", encoding="utf-8") as f:
        f.write(config_content)
    
    # –°–æ–∑–¥–∞–µ–º requirements_timeweb.txt (–±–µ–∑ gunicorn)
    requirements_content = """Flask==2.3.3
Flask-SQLAlchemy==3.0.5
Flask-CORS==4.0.0
pandas==1.5.3
openpyxl==3.1.2
requests==2.31.0
Werkzeug==2.3.7
SQLAlchemy==2.0.21
python-dateutil==2.8.2
pytz==2023.3.post1
alembic==1.12.0
xlrd==2.0.1
mysqlclient==2.1.1
"""
    
    with open(os.path.join(temp_dir, "requirements_timeweb.txt"), "w", encoding="utf-8") as f:
        f.write(requirements_content)
    
    # –°–æ–∑–¥–∞–µ–º README –¥–ª—è Timeweb
    readme_content = """# –î–µ–ø–ª–æ–π –Ω–∞ Timeweb

## –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:

1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∞–π—Ç–∞
2. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö MySQL –≤ –ø–∞–Ω–µ–ª–∏ Timeweb
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –ø–∞–Ω–µ–ª–∏ Timeweb:
   - DB_HOST
   - DB_NAME  
   - DB_USER
   - DB_PASS
   - SECRET_KEY
   - ADMIN_PASSWORD

4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
   pip install -r requirements_timeweb.txt

5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .htaccess –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Python

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤:
- app.py - –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
- wsgi.py - WSGI —Ñ–∞–π–ª
- config_timeweb.py - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Timeweb
- requirements_timeweb.txt - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- .htaccess - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞

## –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:
- –°–æ–∑–¥–∞–π—Ç–µ MySQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–Ω–µ–ª–∏ Timeweb
- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ database.sql
- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ config_timeweb.py
"""
    
    with open(os.path.join(temp_dir, "README_TIMEWEB.md"), "w", encoding="utf-8") as f:
        f.write(readme_content)
    
    # –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    zip_filename = f"accounting_timeweb_{timestamp}.zip"
    
    with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(temp_dir):
            for file in files:
                file_path = os.path.join(root, file)
                arcname = os.path.relpath(file_path, temp_dir)
                zipf.write(file_path, arcname)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤: {zip_filename}")
    print(f"üìÅ –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: {os.path.getsize(zip_filename) / 1024 / 1024:.2f} –ú–ë")
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    shutil.rmtree(temp_dir)
    
    return zip_filename

def create_mysql_migration():
    """–°–æ–∑–¥–∞–µ—Ç SQL —Ñ–∞–π–ª –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Å SQLite –Ω–∞ MySQL"""
    
    print("üóÑÔ∏è –°–æ–∑–¥–∞–µ–º SQL —Ñ–∞–π–ª –¥–ª—è MySQL...")
    
    sql_content = """-- –ú–∏–≥—Ä–∞—Ü–∏—è —Å SQLite –Ω–∞ MySQL –¥–ª—è Timeweb
-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞

-- –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
CREATE TABLE employee (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    telegram VARCHAR(100),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    salary_percent FLOAT
);

-- –¢–∞–±–ª–∏—Ü–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
CREATE TABLE account (
    id INT AUTO_INCREMENT PRIMARY KEY,
    employee_id INT,
    platform VARCHAR(20) NOT NULL,
    account_name VARCHAR(100) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (employee_id) REFERENCES employee(id)
);

-- –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—á–µ—Ç–æ–≤ –æ —Å–º–µ–Ω–∞—Ö
CREATE TABLE shift_report (
    id INT AUTO_INCREMENT PRIMARY KEY,
    employee_id INT NOT NULL,
    shift_date DATE NOT NULL,
    shift_type VARCHAR(20) NOT NULL,
    total_requests INT DEFAULT 0,
    balances_json TEXT NOT NULL DEFAULT '{}',
    scam_amount DECIMAL(15,2) DEFAULT 0,
    scam_comment TEXT DEFAULT '',
    scam_personal BOOLEAN DEFAULT FALSE,
    dokidka_amount DECIMAL(15,2) DEFAULT 0,
    internal_transfer_amount DECIMAL(15,2) DEFAULT 0,
    dokidka_comment TEXT DEFAULT '',
    internal_transfer_comment TEXT DEFAULT '',
    bybit_file VARCHAR(255),
    htx_file VARCHAR(255),
    bliss_file VARCHAR(255),
    start_photo VARCHAR(255),
    end_photo VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    bybit_requests INT DEFAULT 0,
    htx_requests INT DEFAULT 0,
    bliss_requests INT DEFAULT 0,
    bybit_first_trade VARCHAR(100) DEFAULT '',
    bybit_last_trade VARCHAR(100) DEFAULT '',
    htx_first_trade VARCHAR(100) DEFAULT '',
    htx_last_trade VARCHAR(100) DEFAULT '',
    bliss_first_trade VARCHAR(100) DEFAULT '',
    bliss_last_trade VARCHAR(100) DEFAULT '',
    gate_first_trade VARCHAR(100) DEFAULT '',
    gate_last_trade VARCHAR(100) DEFAULT '',
    appeal_amount DECIMAL(15,2) DEFAULT 0,
    appeal_comment TEXT DEFAULT '',
    appeal_deducted BOOLEAN DEFAULT FALSE,
    shift_start_time DATETIME,
    shift_end_time DATETIME,
    FOREIGN KEY (employee_id) REFERENCES employee(id)
);

-- –¢–∞–±–ª–∏—Ü–∞ –¥–µ—Ç–∞–ª–µ–π –æ—Ä–¥–µ—Ä–æ–≤
CREATE TABLE order_detail (
    id INT AUTO_INCREMENT PRIMARY KEY,
    shift_report_id INT NOT NULL,
    order_id VARCHAR(100) NOT NULL,
    symbol VARCHAR(20) NOT NULL,
    side VARCHAR(10) NOT NULL,
    quantity DECIMAL(15,8) NOT NULL,
    price DECIMAL(15,8) NOT NULL,
    total_usdt DECIMAL(15,2) NOT NULL,
    fees_usdt DECIMAL(15,2) DEFAULT 0,
    status VARCHAR(20) NOT NULL,
    executed_at DATETIME,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (shift_report_id) REFERENCES shift_report(id)
);

-- –¢–∞–±–ª–∏—Ü–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤
CREATE TABLE initial_balance (
    id INT AUTO_INCREMENT PRIMARY KEY,
    platform VARCHAR(20) NOT NULL,
    account_name VARCHAR(100) NOT NULL,
    balance DECIMAL(15,2) NOT NULL DEFAULT 0
);

-- –¢–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ –±–∞–ª–∞–Ω—Å–æ–≤ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
CREATE TABLE account_balance_history (
    id INT AUTO_INCREMENT PRIMARY KEY,
    account_id INT,
    account_name VARCHAR(100) NOT NULL,
    platform VARCHAR(20) NOT NULL,
    shift_date DATE NOT NULL,
    shift_type VARCHAR(20) NOT NULL,
    balance DECIMAL(15,2) NOT NULL,
    employee_id INT,
    employee_name VARCHAR(100),
    balance_type VARCHAR(10) NOT NULL DEFAULT 'end',
    FOREIGN KEY (account_id) REFERENCES account(id),
    FOREIGN KEY (employee_id) REFERENCES employee(id)
);

-- –¢–∞–±–ª–∏—Ü–∞ –æ—Ä–¥–µ—Ä–æ–≤
CREATE TABLE `order` (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id VARCHAR(100) NOT NULL UNIQUE,
    employee_id INT NOT NULL,
    platform VARCHAR(20) NOT NULL DEFAULT 'bybit',
    account_name VARCHAR(100) NOT NULL,
    symbol VARCHAR(20) NOT NULL,
    side VARCHAR(10) NOT NULL,
    quantity DECIMAL(15,8) NOT NULL,
    price DECIMAL(15,8) NOT NULL,
    total_usdt DECIMAL(15,2) NOT NULL,
    fees_usdt DECIMAL(15,2) DEFAULT 0,
    status VARCHAR(20) NOT NULL,
    executed_at DATETIME NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (employee_id) REFERENCES employee(id)
);

-- –¢–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–∫–∞–º–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
CREATE TABLE employee_scam_history (
    id INT AUTO_INCREMENT PRIMARY KEY,
    employee_id INT NOT NULL,
    shift_report_id INT NOT NULL,
    amount DECIMAL(15,2) NOT NULL,
    comment TEXT DEFAULT '',
    date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (employee_id) REFERENCES employee(id),
    FOREIGN KEY (shift_report_id) REFERENCES shift_report(id)
);

-- –¢–∞–±–ª–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞—Ä–ø–ª–∞—Ç—ã
CREATE TABLE salary_settings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    base_percent INT NOT NULL DEFAULT 30,
    min_requests_per_day INT NOT NULL DEFAULT 50,
    bonus_percent INT NOT NULL DEFAULT 5,
    bonus_requests_threshold INT NOT NULL DEFAULT 70,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CREATE INDEX idx_shift_report_employee_date ON shift_report(employee_id, shift_date);
CREATE INDEX idx_order_employee_platform ON `order`(employee_id, platform);
CREATE INDEX idx_order_executed_at ON `order`(executed_at);
CREATE INDEX idx_account_balance_history_date ON account_balance_history(shift_date);
"""
    
    with open("database_timeweb.sql", "w", encoding="utf-8") as f:
        f.write(sql_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª database_timeweb.sql")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Timeweb...\n")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç –¥–ª—è –¥–µ–ø–ª–æ—è
    zip_filename = create_deployment_package()
    
    # –°–æ–∑–¥–∞–µ–º SQL —Ñ–∞–π–ª –¥–ª—è MySQL
    create_mysql_migration()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")
    print(f"üì¶ –ê—Ä—Ö–∏–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: {zip_filename}")
    print("üóÑÔ∏è SQL —Ñ–∞–π–ª –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: database_timeweb.sql")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ timeweb.ru")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ —Ö–æ—Å—Ç–∏–Ω–≥ –∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö MySQL")
    print("3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥")
    print("4. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ database_timeweb.sql –≤ MySQL")
    print("5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –ø–∞–Ω–µ–ª–∏ Timeweb")

if __name__ == "__main__":
    main() 