#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import sqlite3
import os
import sys

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        db_path = "instance/arbitrage_reports.db"
        if not os.path.exists(db_path):
            print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = cursor.fetchall()
        conn.close()
        
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def check_app_import():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º–ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        from app import app
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        return False

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    required_packages = [
        'flask', 'flask_sqlalchemy', 'flask_cors', 
        'pandas', 'openpyxl', 'requests', 'werkzeug',
        'sqlalchemy', 'python_dateutil', 'pytz', 'alembic', 'xlrd', 'gunicorn'
    ]
    
    missing_packages = []
    for package in required_packages:
        try:
            __import__(package.replace('-', '_'))
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
        return False
    else:
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True

def check_directories():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    required_dirs = ['uploads', 'instance', 'templates']
    missing_dirs = []
    
    for dir_name in required_dirs:
        if not os.path.exists(dir_name):
            missing_dirs.append(dir_name)
    
    if missing_dirs:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {', '.join(missing_dirs)}")
        return False
    else:
        print("‚úÖ –í—Å–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –º–µ—Å—Ç–µ")
        return True

def check_config_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = ['gunicorn_config.py', 'wsgi.py', 'requirements.txt']
    missing_files = []
    
    for file_name in required_files:
        if not os.path.exists(file_name):
            missing_files.append(file_name)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    else:
        print("‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ")
        return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é...\n")
    
    checks = [
        ("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", check_database),
        ("–ò–º–ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", check_app_import),
        ("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏", check_dependencies),
        ("–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏", check_directories),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã", check_config_files)
    ]
    
    all_passed = True
    for name, check_func in checks:
        print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º {name}...")
        if not check_func():
            all_passed = False
        print()
    
    if all_passed:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é.")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ –í–ú –≤ Yandex Cloud")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ setup_server.sh –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ deploy.sh —Å IP –∞–¥—Ä–µ—Å–æ–º —Å–µ—Ä–≤–µ—Ä–∞")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º.")
        sys.exit(1)

if __name__ == "__main__":
    main() 